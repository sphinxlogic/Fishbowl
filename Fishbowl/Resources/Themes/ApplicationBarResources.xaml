<ClientManagerView:EventResourceDictionary x:Class="FacebookClient.ApplicationBarResourcesDictionary" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:FacebookClient="clr-namespace:FacebookClient" 
    xmlns:ClientManager="clr-namespace:ClientManager;assembly=ClientManager"
    xmlns:ClientManagerControls="clr-namespace:ClientManager.Controls;assembly=ClientManager" 
    xmlns:ClientManagerView="clr-namespace:ClientManager.View;assembly=ClientManager">

  <ControlTemplate x:Key="ToolbarButtonTemplate" TargetType="{x:Type ButtonBase}">
    <Grid x:Name="Root">
      <Border x:Name="Hover" Background="{DynamicResource ButtonHoverBrush}" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="3" Opacity="0" />
      <ContentPresenter Margin="4,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" TargetName="Root" Value="0.4" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" To=".8" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  
  <!-- Just like ToolbarButtonTemplate, but it spins the content a couple times on click. -->
  <ControlTemplate x:Key="SpinningToolbarButtonTemplate" TargetType="{x:Type ButtonBase}">
    <Grid x:Name="Root">
      <Border x:Name="hover" Background="{DynamicResource ButtonHoverBrush}" BorderBrush="#FF6382C5" BorderThickness="1" CornerRadius="3" Opacity="0" />
      <ContentPresenter x:Name="RotatingContentPresenter" RenderTransformOrigin=".5,.5" Margin="4,0" HorizontalAlignment="Center" VerticalAlignment="Center">
        <ContentPresenter.RenderTransform>
          <RotateTransform />
        </ContentPresenter.RenderTransform>
      </ContentPresenter>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" TargetName="Root" Value="0.4" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
      <EventTrigger RoutedEvent="Button.Click">
        <EventTrigger.Actions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="RotatingContentPresenter" Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)" From="0" To="720" Duration="00:00:01.5" />
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger.Actions>
      </EventTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ToolbarToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
    <Grid x:Name="Root">
      <Border x:Name="Selected" Background="{DynamicResource ButtonHoverBrush}" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="3" Opacity="0" />
      <Border x:Name="Hover" Background="{DynamicResource ButtonHoverBrush}" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="3" Opacity="0" />
      <ContentPresenter Margin="4,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" TargetName="Root" Value="0.4" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Selected" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Selected" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation To=".5" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Hover" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Hover" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="NavigationSeparationStyle" TargetType="{x:Type Image}">
    <Setter Property="Source" Value="../Images/main_navigation_divider.png" />
    <Setter Property="Width" Value="3" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
  </Style>

  <Style x:Key="MiniModeButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Visibility" Value="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}" />
    <Setter Property="Template" Value="{StaticResource ToolbarButtonTemplate}"/>
  </Style>

  <Style x:Key="RefreshButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MiniModeButtonStyle}">
    <Setter Property="Template" Value="{StaticResource SpinningToolbarButtonTemplate}" />
  </Style>
  
  <Style x:Key="NavigationButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="Margin" Value="5,0,5,1" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Height" Value="50" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template" Value="{StaticResource ToolbarButtonTemplate}"/>
  </Style>

  <Style x:Key="NavigationRadioButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Margin" Value="1" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Height" Value="50" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template" Value="{StaticResource ToolbarToggleButtonTemplate}"/>
  </Style>

  <Style x:Key="FooterToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Margin" Value="3,1" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template" Value="{StaticResource ToolbarToggleButtonTemplate}" />
  </Style>

  <ControlTemplate x:Key="ToggleUpdateBoxButtonTemplate" TargetType="{x:Type ToggleButton}">
    <Grid x:Name="Root">
      <TextBlock x:Name="Glow" Text="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{StaticResource UpdateButtonTextBlockStyle}" Foreground="White" Opacity="0">
					<TextBlock.Effect>
						<BlurEffect />
					</TextBlock.Effect>
      </TextBlock>
      <TextBlock x:Name="Main" HorizontalAlignment="Left" Style="{StaticResource UpdateButtonTextBlockStyle}" VerticalAlignment="Bottom" Text="{TemplateBinding Content}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" TargetName="Main" Value="0.5" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" TargetName="Glow" Value="1" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Opacity" TargetName="Main" Value="0.7" />
        <Setter Property="Opacity" TargetName="Glow" Value="0.8" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="ToggleUpdateBoxButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template" Value="{StaticResource ToggleUpdateBoxButtonTemplate}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Margin" Value="10,0,0,2" />
  </Style>

  <Style x:Key="UserNameTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="{DynamicResource SansSerifFont}" />
    <Setter Property="Foreground" Value="{DynamicResource IconForegroundBrush}" />
  </Style>

  <Style x:Key="StatusTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="FontSize" Value="20" />
    <Setter Property="FontFamily" Value="{DynamicResource SansSerifFont}" />
    <Setter Property="Foreground" Value="{DynamicResource IconForegroundBrush}" />
    <Setter Property="Margin" Value="0,10,0,0" />
  </Style>

  <Style x:Key="UpdateBoxBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="{StaticResource UpdateBoxBorderBackgroundBrush}" />
    <Setter Property="Width" Value="560" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="90,0,0,0" />
    <Setter Property="CornerRadius" Value="0,0,16,16" />
  </Style>

  <ControlTemplate x:Key="FilterButtonTemplate" TargetType="{x:Type ToggleButton}">
    <Grid>
      <TextBlock Text="{TemplateBinding Content}" Foreground="Black" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="{DynamicResource SansSerifFont}" FontSize="{DynamicResource FontSize}" TextTrimming="CharacterEllipsis" />
      <TextBlock Text="{TemplateBinding Content}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="{DynamicResource SansSerifFont}" FontSize="{DynamicResource FontSize}" TextTrimming="CharacterEllipsis" Opacity="0" x:Name="Glow">
                <TextBlock.Effect>
                    <BlurEffect />
                </TextBlock.Effect>
      </TextBlock>
      <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="{DynamicResource SansSerifFont}" FontSize="{DynamicResource FontSize}" TextTrimming="CharacterEllipsis" x:Name="Main" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" TargetName="Glow" Value="1" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Opacity" TargetName="Main" Value="0.7" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="FilterButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template" Value="{DynamicResource FilterButtonTemplate}" />
    <Setter Property="Foreground" Value="{DynamicResource IconForegroundBrush}" />
  </Style>

  <Style TargetType="{x:Type FacebookClient:MainHeaderControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type FacebookClient:MainHeaderControl}">
          <Grid x:Name="Header" Background="{DynamicResource ApplicationBarBackground}" Height="85" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsOnline}" Visibility="{Binding NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- User Profile Image in background -->
            <ClientManagerControls:FacebookImageControl Grid.Column="0" Grid.RowSpan="3" Margin="-40,0,0,0" FacebookImage="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=MeContact.Image}" FacebookImageDimensions="Big">
              <ClientManagerControls:FacebookImageControl.Template>
                <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                  <Border Width="250" HorizontalAlignment="Left">
                    <Border.Background>
                      <ImageBrush ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" Opacity=".4" Stretch="UniformToFill" />
                    </Border.Background>
                    <Border.OpacityMask>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="Black" />
                        <GradientStop Offset=".7" Color="Black" />
                        <GradientStop Offset="1" Color="Transparent" />
                      </LinearGradientBrush>
                    </Border.OpacityMask>
                  </Border>
                </ControlTemplate>
              </ClientManagerControls:FacebookImageControl.Template>
            </ClientManagerControls:FacebookImageControl>

            <StackPanel Orientation="Horizontal" Margin="0">
              <Button x:Name="BackButton" Command="NavigationCommands.BrowseBack" Width="25" Height="25" VerticalAlignment="Center" Margin="5,0" ToolTip="Go back">
                <Button.Template>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder">
                      <Border.Clip>
                        <EllipseGeometry RadiusX="13" RadiusY="13" Center="12.5,12.5" />
                      </Border.Clip>
                      <Rectangle Fill="{StaticResource BackArrowDrawingBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsFocused" Value="True" />
                      <Trigger Property="IsDefaulted" Value="True" />
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="ButtonBorder">
                          <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#66F3F3F3" Offset="0" />
                              <GradientStop Color="#66EBEBEB" Offset="0.5" />
                              <GradientStop Color="#66DDDDDD" Offset="0.5" />
                              <GradientStop Color="#66B1BDD6" Offset="1" />
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="ButtonBorder">
                          <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                              <GradientStop Color="#FFF3F3F3" Offset="0" />
                              <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                              <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                              <GradientStop Color="#FFB1BDD6" Offset="1" />
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" TargetName="ButtonBorder" Value=".3" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Button.Template>
              </Button>
              <Image Width="129" Height="19" Margin="3,0,0,0" Source="pack://application:,,,/Resources/Images/logo.png" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
            </StackPanel>

            <!-- Status -->
            <TextBlock x:Name="StatusTextBlock" Grid.Column="0" Grid.Row="1" Margin="6,3,3,3" VerticalAlignment="Top" HorizontalAlignment="Left" FontFamily="Resources/Fonts/#Gotham" FontSize="13px" FontWeight="Light" Foreground="{DynamicResource HeaderStatusForegroundBrush}" TextTrimming="CharacterEllipsis">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} {1}">
                  <Binding Source="{x:Static ClientManager:ServiceProvider.ViewManager}" Path="MeContact.Name" />
                  <Binding Source="{x:Static ClientManager:ServiceProvider.ViewManager}" Path="MeContact.StatusMessage.Message" FallbackValue="" />
                </MultiBinding>
              </TextBlock.Text>
              <TextBlock.ToolTip>
                <ToolTip Placement="Bottom" >
                  <TextBlock TextWrapping="Wrap" MaxWidth="350">
                    <TextBlock.Text>
                      <MultiBinding StringFormat="{}{0} {1}">
                        <Binding Source="{x:Static ClientManager:ServiceProvider.ViewManager}" Path="MeContact.Name" />
                        <Binding Source="{x:Static ClientManager:ServiceProvider.ViewManager}" Path="MeContact.StatusMessage.Message" FallbackValue="" />
                      </MultiBinding>
                    </TextBlock.Text>
                  </TextBlock>
                </ToolTip>
              </TextBlock.ToolTip>
            </TextBlock>

            <Canvas HorizontalAlignment="Left" Grid.Row="2" Margin="-10,0,0,0" ClipToBounds="False">
              <FacebookClient:UpdateStatusControl x:Name="UpdateStatusControl" Margin="10,0,0,0" Width="300" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsOnline}" />
            </Canvas>

            <!-- Search Panel -->
            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Margin="10,2,5,-2">
              <FacebookClient:CommandTextBox x:Name="SearchTextBox"
                  Width="200" 
                  HorizontalAlignment="Right" 
                  Margin="5,0" 
                  VerticalAlignment="Center" 
                  CommitCommand="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=NavigationCommands.NavigateSearchCommand}" 
                  CommitCommandParameter="{Binding ElementName=SearchTextBox, Path=Text}" 
                  IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsOnline}" 
                  Style="{StaticResource SearchTextBoxStyle}" 
                  Tag="Search" 
                  BannerText="Search" />
              <Button Margin="0,3" 
                MinHeight="20"
                VerticalAlignment="Center" HorizontalAlignment="Right" 
                VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                Command="{x:Static FacebookClient:MainHeaderControl.RefreshCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource RefreshButtonStyle}"
                ToolTip="Think you're missing something? Click to refresh now.">
                <Rectangle Width="16" Height="16" Fill="{StaticResource RefreshArrowDrawingBrush}" />
              </Button>

              <Button Margin="0,3"
                  VerticalAlignment="Center" HorizontalAlignment="Center" 
                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                  Command="{x:Static FacebookClient:MainHeaderControl.ShowMiniModeCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                  Style="{DynamicResource MiniModeButtonStyle}"
                  ToolTip="Switch to mini-mode window">
                <Rectangle Margin="2" Width="18" Height="18" Fill="{StaticResource MiniModeIconDrawingBrush}" />
              </Button>
            </StackPanel>

            <Grid x:Name="NavigationPanel" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Margin="2,3,5,0" HorizontalAlignment="Right">
              <Grid.Resources>
                <Style TargetType="Rectangle">
                  <Setter Property="Height" Value="23" />
                  <Setter Property="Margin" Value="0" />
                </Style>
                <Style TargetType="TextBlock">
                  <Setter Property="Foreground" Value="White" />
                  <Setter Property="FontSize" Value="12" />
                  <Setter Property="FontFamily" Value="Resources/Fonts/#Gotham" />
                  <Setter Property="FontWeight" Value="Light" />
                  <Setter Property="VerticalAlignment" Value="Top" />
                  <Setter Property="HorizontalAlignment" Value="Center" />
                  <Setter Property="Margin" Value="4,5,4,0" />
                </Style>
              </Grid.Resources>
              <StackPanel Orientation="Horizontal">
                <RadioButton x:Name="HomeNavigationButton" Command="{Binding Path=NavigationCommands.NavigateHomeCommand, Source={x:Static ClientManager:ServiceProvider.ViewManager}}" IsChecked="True" Style="{StaticResource NavigationRadioButtonStyle}" ToolTip="See what's new with your friends">
                  <DockPanel>
                    <TextBlock DockPanel.Dock="Bottom" x:Name="HomeNavigationButtonText" Text="Home" />
                    <Rectangle x:Name="HomeNavigationButtonImage" Fill="{StaticResource Home3DrawingBrush}" Width="23" />
                  </DockPanel>
                </RadioButton>
                <RadioButton x:Name="FriendsNavigationButton" Command="{Binding Path=NavigationCommands.NavigateFriendsCommand, Source={x:Static ClientManager:ServiceProvider.ViewManager}}" Style="{StaticResource NavigationRadioButtonStyle}" ToolTip="Check in on your friends">
                  <StackPanel Orientation="Vertical">
                    <Rectangle Fill="{StaticResource StackedBuddies2DrawingBrush}" Width="23" />
                    <TextBlock x:Name="FriendsNavigationButtonText" Text="Friends" />
                  </StackPanel>
                </RadioButton>
                <RadioButton x:Name="ProfileNavigationButton" Command="{Binding Path=NavigationCommands.NavigateProfileCommand, Source={x:Static ClientManager:ServiceProvider.ViewManager}}" Style="{StaticResource NavigationRadioButtonStyle}" ToolTip="Check in on yourself">
                  <StackPanel Orientation="Vertical">
                    <Rectangle Fill="{StaticResource SingleBuddy2DrawingBrush}" Width="23" />
                    <TextBlock x:Name="ProfileNavigationButtonText" Text="Profile" />
                  </StackPanel>
                </RadioButton>
                <RadioButton x:Name="PhotoAlbumsNavigationButton" Command="{Binding Path=NavigationCommands.NavigatePhotoAlbumsCommand, Source={x:Static ClientManager:ServiceProvider.ViewManager}}" Style="{StaticResource NavigationRadioButtonStyle}" ToolTip="See everyone's photos">
                  <StackPanel Orientation="Vertical">
                    <Rectangle Fill="{StaticResource PhotosDrawingBrush}" Width="36" />
                    <TextBlock x:Name="PhotoAlbumsNavigationButtonText" Text="Photos" />
                  </StackPanel>
                </RadioButton>
                <Button x:Name="FacebookButton" Command="{x:Static FacebookClient:MainHeaderControl.GoToFacebookCommand}" Style="{StaticResource NavigationButtonStyle}" ToolTip="Go to Facebook">
                  <StackPanel Orientation="Vertical">
                    <Rectangle Fill="{StaticResource FacebookDrawingBrush}" Width="30" />
                    <TextBlock x:Name="FacebookButtonText" Text="Facebook" />
                  </StackPanel>
                </Button>
              </StackPanel>
            </Grid>
          </Grid>
          
          <!--<ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FacebookClient:MainWindow}}, Path=IsInSmallMode}" Value="True">
              <Setter TargetName="UpdateStatusControl" Property="Width" Value="300" />
              <Setter TargetName="HomeNavigationButton" Property="Height" Value="30" />
              <Setter TargetName="HomeNavigationButtonText" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="FriendsNavigationButton" Property="Height" Value="30" />
              <Setter TargetName="FriendsNavigationButtonText" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="ProfileNavigationButton" Property="Height" Value="30" />
              <Setter TargetName="ProfileNavigationButtonText" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PhotoAlbumsNavigationButton" Property="Height" Value="30" />
              <Setter TargetName="PhotoAlbumsNavigationButtonText" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="FacebookButton" Property="Height" Value="30" />
              <Setter TargetName="FacebookButtonText" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="StatusTextBlock" Property="Grid.ColumnSpan" Value="2"/>
            </DataTrigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type FacebookClient:FooterControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type FacebookClient:FooterControl}">
          <DockPanel x:Name="Footer" 
              Height="24" 
              Background="{DynamicResource ApplicationBarBackground}" 
              IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsOnline}" 
              Visibility="{Binding NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}">
            <DockPanel.Resources>
              <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="Resources/Fonts/#Gotham" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4,5,4,0" />
              </Style>
            </DockPanel.Resources>

            <ToggleButton x:Name="ChatButton"
                DockPanel.Dock="Right"
                HorizontalAlignment="Right" 
                Style="{DynamicResource FooterToggleButtonStyle}"
                ToolTipService.Placement="Top"
                ToolTip="See who else is around"
                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsBuddyListToggled, Mode=TwoWay}">
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Grid Width="38">
                  <Rectangle Width="26" Height="22" HorizontalAlignment="Left" VerticalAlignment="Stretch" Fill="{StaticResource ChatDrawingBrush}" />
                  <FacebookClient:NotificationCountControl 
                      x:Name="ActiveFriendsCountControl" 
                      HorizontalAlignment="Right" VerticalAlignment="Center"
                      DisplayCount="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=OnlineFriends.Count}" >
                    <FacebookClient:NotificationCountControl.Background>
                      <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0.000" Color="#FFF9F9" />
                        <GradientStop Offset="0.524" Color="#67A932" />
                      </LinearGradientBrush>
                    </FacebookClient:NotificationCountControl.Background>
                  </FacebookClient:NotificationCountControl>
                </Grid>
                <TextBlock x:Name="ChatButtonText" Text="Who's Online" />
              </StackPanel>
            </ToggleButton>

            <ToggleButton x:Name="NotificationsButton"
                DockPanel.Dock="Right" 
                Style="{StaticResource FooterToggleButtonStyle}" 
                ToolTip="See new notifications" 
                ToolTipService.Placement="Top"
                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AreNotificationsToggled, Mode=TwoWay}">
              <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Grid Width="30">
                  <Rectangle Width="20" HorizontalAlignment="Left" VerticalAlignment="Stretch" Fill="{StaticResource NotificationsPostDrawingBrush}" />
                  <FacebookClient:NotificationCountControl 
                      x:Name="NotificationControl"
                      HorizontalAlignment="Right" VerticalAlignment="Center"
                      DisplayCount="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=Notifications.Count}">
                    <FacebookClient:NotificationCountControl.Background>
                      <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0.000" Color="#FFF9F9" />
                        <GradientStop Offset="0.524" Color="Firebrick" />
                      </LinearGradientBrush>
                    </FacebookClient:NotificationCountControl.Background>
                  </FacebookClient:NotificationCountControl>

                </Grid>
                <TextBlock x:Name="NotificationsButtonText" Text="Notifications" />
              </StackPanel>
            </ToggleButton>
            <ToggleButton x:Name="InboxButton"
                DockPanel.Dock="Right"
                HorizontalAlignment="Right" 
                Style="{StaticResource FooterToggleButtonStyle}" 
                ToolTipService.Placement="Top"
                ToolTip="See new messages"
                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsInboxToggled, Mode=TwoWay}">
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Grid Width="30">
                  <Rectangle Width="20" HorizontalAlignment="Left" VerticalAlignment="Stretch" Fill="{StaticResource EnvelopeDrawingBrush}" />
                  <FacebookClient:NotificationCountControl 
                      x:Name="InboxCountControl" 
                      HorizontalAlignment="Right" VerticalAlignment="Center"
                      DisplayCount="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=UnreadMessageCount}" >
                    <FacebookClient:NotificationCountControl.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0.000" Color="#FFF9F9" />
                        <GradientStop Offset="0.524" Color="#7288B7" />
                      </LinearGradientBrush>
                    </FacebookClient:NotificationCountControl.Background>
                  </FacebookClient:NotificationCountControl>
                </Grid>
                <TextBlock x:Name="InboxButtonText" Text="Inbox" />
              </StackPanel>
            </ToggleButton>

            <Image x:Name="Separator1" Margin="8,0" DockPanel.Dock="Right" Style="{StaticResource NavigationSeparationStyle}" />

            <Button x:Name="SignOutButton" Margin="3,1"
                    DockPanel.Dock="Right"
                    MinHeight="20"
                VerticalAlignment="Center" HorizontalAlignment="Right" 
                VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                Command="{x:Static FacebookClient:FooterControl.SignOutCommand}" 
                Style="{DynamicResource MiniModeButtonStyle}"
                ToolTipService.Placement="Top"
                ToolTip="Sign Out">
              <Rectangle Margin="0" Width="16" Height="16" Fill="{StaticResource ClosingDoorDrawingBrush}" />
            </Button>

            <Button Margin="3,1"
                    DockPanel.Dock="Right"
                    MinHeight="20"
                VerticalAlignment="Center" HorizontalAlignment="Right" 
                VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                Command="{x:Static FacebookClient:FooterControl.ShowSettingsCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                Style="{DynamicResource MiniModeButtonStyle}" 
                ToolTipService.Placement="Top"
                ToolTip="View and change settings">
              <Rectangle Margin="0" Width="16" Height="16" Fill="{StaticResource SettingsDrawingBrush}" />
            </Button>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ClientManagerView:EventResourceDictionary>
