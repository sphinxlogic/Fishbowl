<ClientManagerView:EventResourceDictionary x:Class="FacebookClient.FriendBarEventResourceDictionary"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:FacebookClient="clr-namespace:FacebookClient"
    xmlns:ClientManager="clr-namespace:ClientManager;assembly=ClientManager"
    xmlns:ClientManagerView="clr-namespace:ClientManager.View;assembly=ClientManager"
    xmlns:ClientManagerControls="clr-namespace:ClientManager.Controls;assembly=ClientManager">

    <LinearGradientBrush x:Key="ArrowButtonBorderBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{StaticResource FacebookLightBlue}"
                      Offset="0" />
        <GradientStop Color="{StaticResource FacebookBlue}" 
                      Offset="0.9" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ArrowButtonBackgroundBrush"
                     Color="#FF4A4E57" />

    <!--<Style x:Key="BubbleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template"
                Value="{StaticResource BubbleButtonTemplate}" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
    </Style>-->

    <DataTemplate x:Key="ItemTemplate">
        <ClientManagerControls:FacebookContactDragContainer FacebookContact="{Binding}">
            <Button x:Name="ItemButton" VerticalAlignment="Top" Style="{StaticResource AnimatedItemButton}" 
                    Margin="5" Click="OnNavigateToContentButtonClicked" 
                    ClientManagerView:ViewManager.NavigationContent="{Binding}"
                    IsEnabled="{Binding HasData, FallbackValue=False}"
                    RenderTransformOrigin="0.5,0.5">
                <Button.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-6"/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Viewbox>
                    <Grid Width="106" Height="106">
                        <Image Name="Placeholder" Source="pack://application:,,,/Resources/Images/avatar_background.png"/>
                        <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Image}" 
                                                                    FacebookImageDimensions="Big">
                            <ClientManagerControls:FacebookImageControl.Template>
                                <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                                    <Border Margin="4,4,4.5,6">
                                        <Border.Background>
                                            <ImageBrush Stretch="UniformToFill" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                                        </Border.Background>
                                    </Border>
                                </ControlTemplate>
                            </ClientManagerControls:FacebookImageControl.Template>
                        </ClientManagerControls:FacebookImageControl>
                    </Grid>
                </Viewbox>
            </Button>
        </ClientManagerControls:FacebookContactDragContainer>
    </DataTemplate>

    <Style x:Key="FriendsBarListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ContentTemplate" Value="{DynamicResource ItemTemplate}" />
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="ButtonBorder" RenderTransformOrigin=".5, .5" BorderThickness="0">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter Focusable="False" />
                        <Border.ToolTip>
                            <TextBlock Text="{Binding Name}" MaxWidth="300" TextTrimming="CharacterEllipsis" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Name}" Value="">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border.ToolTip>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                        BeginTime="00:00:00"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                        Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" KeySpline="0,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0400000" Value="1.50" KeySpline="0.125,0,0.875,1" />
                                            <SplineDoubleKeyFrame
                          KeyTime="00:00:00.0700000"
                          Value="1.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                 Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                            Value="1"
                                                            KeySpline="0,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0400000"
                                                            Value="1.5"
                                                            KeySpline="0.125,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0700000"
                                                            Value="1.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                 Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1500000"
                                                            Value="1"
                                                            KeySpline="0,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2200000"
                                                            Value="1.025"
                                                            KeySpline="0,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1" KeySpline="0,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2200000" Value="1.025" KeySpline="0,0,0.875,1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ScrollbarButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Grid>
            <Path x:Name="Arrow"
                  Fill="{DynamicResource ArrowButtonBackgroundBrush}"
                  Stroke="{DynamicResource ArrowButtonBorderBrush}"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Data="M11.4999847412109,12.8989802002909C11.4999847412109,12.8989802002909,1.99993896484352,1.99997448921238,1.99993896484352,1.99997448921238C1.99993896484352,1.99997448921238,20.9999542236326,1.99997448921238,20.9999542236326,1.99997448921238C20.9999542236326,1.99997448921238,11.4999847412109,12.8989802002909,11.4999847412109,12.8989802002909z"
                  RenderTransformOrigin="0.5,0.5"
                  Margin="0,6,0,6"
                  Cursor="Hand">
                <Path.RenderTransform>
                    <RotateTransform Angle="90" /> 
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource ArrowButtonBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Stroke"
                        Value="{DynamicResource ArrowButtonBackgroundBrush}" />
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource ArrowButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="0.4" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="1.0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DoubleScrollbarButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Grid>
            <Path x:Name="Arrow"
                  Fill="{DynamicResource ArrowButtonBackgroundBrush}"
                  Stroke="{DynamicResource ArrowButtonBorderBrush}"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Width="22"
                  Height="14"
                  Data="M11.4999847412109,12.8989802002909C11.4999847412109,12.8989802002909,1.99993896484352,1.99997448921238,1.99993896484352,1.99997448921238C1.99993896484352,1.99997448921238,20.9999542236326,1.99997448921238,20.9999542236326,1.99997448921238C20.9999542236326,1.99997448921238,11.4999847412109,12.8989802002909,11.4999847412109,12.8989802002909z"
                  RenderTransformOrigin="0.5,0.5"
                  Margin="5,0,0,0"
                  Cursor="Hand">
                <Path.RenderTransform>
                    <RotateTransform Angle="90" />
                </Path.RenderTransform>
            </Path>
            <Path x:Name="Arrow2"
                  Fill="{DynamicResource ArrowButtonBackgroundBrush}"
                  Stroke="{DynamicResource ArrowButtonBorderBrush}"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Width="22"
                  Height="14"
                  Data="M11.4999847412109,12.8989802002909C11.4999847412109,12.8989802002909,1.99993896484352,1.99997448921238,1.99993896484352,1.99997448921238C1.99993896484352,1.99997448921238,20.9999542236326,1.99997448921238,20.9999542236326,1.99997448921238C20.9999542236326,1.99997448921238,11.4999847412109,12.8989802002909,11.4999847412109,12.8989802002909z"
                  RenderTransformOrigin="0.5,0.5"
                  Margin="15,0,0,0"
                  Cursor="Hand">
                <Path.RenderTransform>
                    <RotateTransform Angle="90" />
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource ArrowButtonBorderBrush}" />
                <Setter TargetName="Arrow2"
                        Property="Fill"
                        Value="{DynamicResource ArrowButtonBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Stroke"
                        Value="{DynamicResource ArrowButtonBackgroundBrush}" />
                <Setter TargetName="Arrow2"
                        Property="Stroke"
                        Value="{DynamicResource ArrowButtonBackgroundBrush}" />
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource ArrowButtonBackgroundBrush}" />
                <Setter TargetName="Arrow2"
                        Property="Fill"
                        Value="{DynamicResource ArrowButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="0.4" />
                <Setter TargetName="Arrow2"
                        Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

  <ControlTemplate x:Key="FriendsBarScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
      <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
          Margin="0"
          VerticalAlignment="Stretch"
          Content="{TemplateBinding Content}"
          ContentTemplate="{TemplateBinding ContentTemplate}"
          CanContentScroll="{TemplateBinding CanContentScroll}"
          CanHorizontallyScroll="False"
          CanVerticallyScroll="False" />
        <ScrollBar x:Name="PART_HorizontalScrollBar"
                   Cursor="Arrow"
                   Visibility="Collapsed"
                   Maximum="{TemplateBinding ScrollableWidth}"
                   Minimum="0"
                   Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Orientation="Horizontal"
                   ViewportSize="{TemplateBinding ViewportWidth}"
                   Height="{Binding Path=ActualHeight, ElementName=Grid, Mode=Default}"
                   Style="{DynamicResource ScrollBarStyle}" />
    </Grid>
  </ControlTemplate>

  <Style x:Key="FriendsBarListBoxStyle" TargetType="ListBox">
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
      <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBox}">
            <Border 
                SnapsToDevicePixels="true"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="0">
                <Border.OpacityMask>
                    <LinearGradientBrush StartPoint="0,.5" EndPoint="1,.5">
                        <GradientStop Offset="0" Color="Transparent"/>
                        <GradientStop Offset=".05" Color="#88000000"/>
                        <GradientStop Offset=".15" Color="Black"/>
                        <GradientStop Offset=".85" Color="Black"/>
                        <GradientStop Offset=".95" Color="#88000000"/>
                        <GradientStop Offset="1" Color="Transparent"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>

                        <ScrollViewer
                  Padding="{TemplateBinding Padding}"
                  Template="{DynamicResource FriendsBarScrollViewerTemplate}"
                  Focusable="false">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

</ClientManagerView:EventResourceDictionary>