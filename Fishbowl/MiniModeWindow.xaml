<Window x:Class="FacebookClient.MiniModeWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Facebook="clr-namespace:Contigo;assembly=Contigo"
    xmlns:FacebookClient="clr-namespace:FacebookClient"
    xmlns:ClientManager="clr-namespace:ClientManager;assembly=ClientManager"
    xmlns:ClientManagerControls="clr-namespace:ClientManager.Controls;assembly=ClientManager"
    xmlns:ClientManagerView="clr-namespace:ClientManager.View;assembly=ClientManager"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
    x:Name="MainWindow"
    FacebookClient:MiniModeWindow.NonGlassBackground="{DynamicResource FacebookBlueBrush}"
    Title="fishbowl" 
    ResizeMode="CanMinimize"
    WindowStyle="None"
    Width="280" Height="180"
    Topmost="True"
    AllowDrop="True"
    MouseLeftButtonDown="_OnMouseDown" 
    PreviewKeyDown="Grid_PreviewKeyDown" 
    MouseWheel="OnWindow_MouseWheel">
  <shell:TaskbarItemInfo.TaskbarItemInfo>
    <TaskbarItemInfo 
        Overlay="{Binding ElementName=NotificationCountControl, Path=ImageSource}"
        Description="{Binding ElementName=PART_ZapScroller2, Path=CurrentItem.Message}" ThumbnailClipMargin="0,0,0,33">
      <TaskbarItemInfo.ThumbButtonInfos>
        <ThumbButtonInfo Command="{Binding ElementName=PART_ZapScroller2, Path=PreviousCommand}" ImageSource="pack://application:,,,/Resources/Images/arrowLeft_default.png" />
        <ThumbButtonInfo Command="{Binding ElementName=PART_ZapScroller2, Path=NextCommand}" ImageSource="pack://application:,,,/Resources/Images/arrowRight_default.png" />
      </TaskbarItemInfo.ThumbButtonInfos>
    </TaskbarItemInfo>
  </shell:TaskbarItemInfo.TaskbarItemInfo>
  <Window.Resources>
    <Style x:Key="RestoreButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid Height="18">
              <Border x:Name="CloseButtonBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,0,2" Height="Auto" Width="22" Background="Transparent">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <TextBlock x:Name="CloseText" Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18" FontFamily="Webdings" Foreground="Black" Text="5" />
                </StackPanel>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsFocused" Value="True" />
              <Trigger Property="IsDefaulted" Value="True" />
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="Firebrick" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="Firebrick" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Foreground" TargetName="CloseText" Value="White" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="DarkRed" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="DarkRed" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsEnabled" Value="False" />
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Foreground" Value="DarkBlue" />
    </Style>

    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid Height="18">
              <Border x:Name="CloseButtonBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,2,0" Height="Auto" Width="22" Background="Transparent">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <TextBlock x:Name="CloseText" Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18" FontFamily="Webdings" Foreground="Black" Text="6" />
                </StackPanel>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsFocused" Value="True" />
              <Trigger Property="IsDefaulted" Value="True" />
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="Indigo" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="Indigo" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Foreground" TargetName="CloseText" Value="White" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="MidnightBlue" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="MidnightBlue" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsEnabled" Value="False" />
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Foreground" Value="DarkBlue" />
    </Style>

    <ControlTemplate x:Key="NavigatePhotoLeftButtonTemplate" TargetType="RepeatButton">
      <Grid x:Name="Root">
        <Border VerticalAlignment="Center" Background="Transparent" BorderBrush="Transparent" BorderThickness="8">
          <Viewbox Height="16" Margin="0,-7,0,0" VerticalAlignment="Center">
            <Path x:Name="Arrow" Width="25" Height="25" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Center" Cursor="Hand" Data="M11.499,12.898C11.499,12.898,1.999,1.999,1.999,1.999C1.999,1.999,20.999,1.999,20.999,1.999C20.999,1.999,11.499,12.898,11.499,12.898z" Fill="White" RenderTransformOrigin="0.5,0.5" Stroke="Gray">
              <Path.RenderTransform>
                <RotateTransform Angle="90" />
              </Path.RenderTransform>
            </Path>
          </Viewbox>
        </Border>
        <ContentPresenter Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
      </Grid>
    </ControlTemplate>
    <Style x:Key="NavigatePhotoLeftButtonStyle" TargetType="RepeatButton">
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Width" Value="Auto" />
      <Setter Property="Height" Value="30" />
      <Setter Property="Template" Value="{StaticResource NavigatePhotoLeftButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="NavigatePhotoRightButtonTemplate" TargetType="RepeatButton">
      <Grid x:Name="Root">
        <Border VerticalAlignment="Center" Background="Transparent" BorderBrush="Transparent" BorderThickness="8">
          <Viewbox Height="16" Margin="0,-10,0,0" VerticalAlignment="Center">
            <Path x:Name="Arrow" Width="25" Height="25" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Center" Cursor="Hand" Data="M11.499,12.898C11.499,12.898,1.999,1.999,1.999,1.999C1.999,1.999,20.999,1.999,20.999,1.999C20.999,1.999,11.499,12.898,11.499,12.898z" Fill="White" RenderTransformOrigin="0.5,0.5" Stroke="Gray">
              <Path.RenderTransform>
                <RotateTransform Angle="270" />
              </Path.RenderTransform>
            </Path>
          </Viewbox>
        </Border>
        <ContentPresenter Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" />
      </Grid>
    </ControlTemplate>
    <Style x:Key="NavigatePhotoRightButtonStyle" TargetType="RepeatButton">
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Width" Value="Auto" />
      <Setter Property="Height" Value="30" />
      <Setter Property="Template" Value="{StaticResource NavigatePhotoRightButtonTemplate}" />
    </Style>
    <Style x:Key="CaptionTextBoxStyle" TargetType="{x:Type TextBox}">
      <Setter Property="SpellCheck.IsEnabled" Value="True" />
      <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="AllowDrop" Value="true" />
      <Setter Property="FontSize" Value="14px" />
      <Setter Property="Foreground" Value="White" />
      <Setter Property="FontWeight" Value="Normal" />
      <Setter Property="Background" Value="#000000" />
      <Setter Property="MinHeight" Value="23" />
      <Setter Property="MaxHeight" Value="23" />
      <Setter Property="TextWrapping" Value="Wrap" />
      <Setter Property="AcceptsReturn" Value="True" />
      <Setter Property="FontFamily" Value="../Fonts/#Gotham" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Grid x:Name="RootContainer">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="15" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="15" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="9" />
                  <RowDefinition Height="*" />
                  <RowDefinition Height="9" />
                </Grid.RowDefinitions>
                <Border x:Name="CaptionTextBoxBorder" Grid.ColumnSpan="3" Grid.RowSpan="3" Background="#FF7489B6" CornerRadius="6.5" />
                <Border x:Name="FocusBacking" Grid.ColumnSpan="3" Grid.RowSpan="3" Background="#FFFFFF" CornerRadius="6.5" Opacity="0" />
                <Image Grid.Column="0" Margin="0,0,-0.1,0" Source="../Images/Controls/text_box_top_left.png" Stretch="Fill" />
                <Image Grid.Column="1" Source="../Images/Controls/text_box_top.png" Stretch="Fill" />
                <Image Grid.Column="2" Margin="-0.1,0,0,0" Source="../Images/Controls/text_box_top_right.png" Stretch="Fill" />
                <Image Grid.Column="0" Grid.Row="1" Source="../Images/Controls/text_box_left.png" Stretch="Fill" />
                <Image Grid.Column="2" Grid.Row="1" Source="../Images/Controls/text_box_right.png" Stretch="Fill" />
                <Image Grid.Column="0" Grid.Row="2" Margin="0,0,-0.1,0" Source="../Images/Controls/text_box_bottom_left.png" Stretch="Fill" />
                <Image Grid.Column="1" Grid.Row="2" Source="../Images/Controls/text_box_bottom.png" Stretch="Fill" />
                <Image Grid.Column="2" Grid.Row="2" Margin="-0.1,0,0,0" Source="../Images/Controls/text_box_bottom_right.png" Stretch="Fill" />
              </Grid>
              <TextBlock x:Name="HelpText" HorizontalAlignment="Left" Margin="7,0,0,0" VerticalAlignment="Center" FontFamily="../Fonts/#Gotham" FontSize="12px" FontStyle="Italic" FontWeight="Light" Foreground="White" Text="{TemplateBinding ToolTip}" Visibility="Collapsed" />
              <ScrollViewer x:Name="PART_ContentHost" Margin="7,2,5,0" FontWeight="Medium" Foreground="White" />
            </Grid>
            <ControlTemplate.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsFocused" Value="False" />
                  <Condition Property="Text" Value="" />
                </MultiTrigger.Conditions>
                <Setter TargetName="HelpText" Property="Visibility" Value="Visible" />
              </MultiTrigger>
              <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="White" />
                <Setter TargetName="CaptionTextBoxBorder" Property="Background" Value="White" />
              </Trigger>
              <Trigger Property="IsFocused" Value="False">
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="Background" Value="#000000" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="MiniNotificationsToggleButtonStyle" TargetType="{x:Type ToggleButton}">
      <Style.Triggers>
          <DataTrigger Binding="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=Notifications.Count}" Value="0">
              <Setter Property="Visibility" Value="Collapsed" />
          </DataTrigger>
      </Style.Triggers>
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Grid x:Name="Root">
              <ContentPresenter Margin="0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </Window.Resources>

  <!-- Tricks with WS_THICKFRAME cause the window's template to not correspond to the true client size.
       We'll correct for this in the code-behind. -->
  <Grid x:Name="RootPanel" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="{Binding ElementName=MainWindow, Path=Background}">
    <DockPanel Margin="0">
      <DockPanel DockPanel.Dock="Bottom" Height="25" Margin="8">
        <ToggleButton x:Name="MiniNotificationsButton" 
            DockPanel.Dock="Right" 
                      Margin="3,0" 
                      Background="Transparent" 
                      Width="22" Height="22" 
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center" 
                      ToolTip="Show Notifications"
                      Style="{DynamicResource MiniNotificationsToggleButtonStyle}">
          <FacebookClient:NotificationCountControl x:Name="NotificationCountControl" DisplayCount="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=Notifications.Count}">
            <FacebookClient:NotificationCountControl.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.000" Color="#FFF9F9" />
                <GradientStop Offset="0.524" Color="Firebrick" />
              </LinearGradientBrush>
            </FacebookClient:NotificationCountControl.Background>
          </FacebookClient:NotificationCountControl>
        </ToggleButton>

        <Popup DockPanel.Dock="Right" Margin="1" x:Name="PART_PopupNotification" AllowsTransparency="True" IsOpen="{Binding ElementName=MiniNotificationsButton,Path=IsChecked}" PlacementTarget="{Binding ElementName=MainWindow}" Placement="Bottom">
          <Border x:Name="DropDownBorder" Background="#FF7489B6" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
            <FacebookClient:NotificationsControl 
              Grid.Row="1"
              VerticalAlignment="Top" 
              HorizontalAlignment="Right" 
              IsDisplayed="{Binding ElementName=MiniNotificationsButton, Path=IsChecked, Mode=TwoWay}" 
              RequestNavigate="_OnRequestNavigate" />
          </Border>
        </Popup>

        <Button DockPanel.Dock="Right" Margin="3,1" ToolTip="Go to Facebook" Style="{StaticResource SimpleButtonStyle}" Click="_OnFacebookButtonClick">
            <Rectangle Width="20" Height="20"  Fill="{StaticResource FacebookDrawingBrush}" />
        </Button>

        <Grid DockPanel.Dock="Left" Margin="0" Height="23" HorizontalAlignment="Left" Width="142">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="15" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="8" />
            <RowDefinition Height="*" />
            <RowDefinition Height="8" />
          </Grid.RowDefinitions>

          <Image Grid.Column="0" Source="pack://application:,,,/Resources/Images/Controls/text_box_top_left.png" Stretch="Fill" Margin="0,0,-0.1,0" />
          <Image Grid.Column="1" Source="pack://application:,,,/Resources/Images/Controls/text_box_top.png" Stretch="Fill" />
          <Image Grid.Column="2" Source="pack://application:,,,/Resources/Images/Controls/text_box_top_right.png" Stretch="Fill" Margin="-0.1,0,0,0" />

          <Image Grid.Column="0" Grid.Row="1" Source="pack://application:,,,/Resources/Images/Controls/text_box_left.png" Stretch="Fill" />
          <Image Grid.Column="2" Grid.Row="1" Source="pack://application:,,,/Resources/Images/Controls/text_box_right.png" Stretch="Fill" />

          <Image Grid.Column="0" Grid.Row="2" Source="pack://application:,,,/Resources/Images/Controls/text_box_bottom_left.png" Stretch="Fill" Margin="0,0,-0.1,0" />
          <Image Grid.Column="1" Grid.Row="2" Source="pack://application:,,,/Resources/Images/Controls/text_box_bottom.png" Stretch="Fill" />
          <Image Grid.Column="2" Grid.Row="2" Source="pack://application:,,,/Resources/Images/Controls/text_box_bottom_right.png" Stretch="Fill" Margin="-0.1,0,0,0" />

          <StackPanel Width="128" Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Center" Background="Transparent" Orientation="Horizontal">
            <RepeatButton Command="{Binding ElementName=PART_ZapScroller2, Path=PreviousCommand}" Style="{StaticResource NavigatePhotoLeftButtonStyle}" />
            <TextBlock MinWidth="50" HorizontalAlignment="Center" Margin="5,0" VerticalAlignment="Center" FontSize="12" Foreground="White" TextAlignment="Center">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} of {1}">
                  <Binding Converter="{StaticResource AddConverter}" ConverterParameter="1" ElementName="PART_ZapScroller2" Path="CurrentItemIndex" />
                  <Binding ElementName="PART_ZapScroller2" Path="ItemCount" />
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
            <RepeatButton Command="{Binding ElementName=PART_ZapScroller2, Path=NextCommand}" Style="{StaticResource NavigatePhotoRightButtonStyle}" />
          </StackPanel>
        </Grid>
      </DockPanel>

      <FacebookClient:ZapScroller x:Name="PART_ZapScroller2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=NewsFeed}">
        <FacebookClient:ZapScroller.ItemTemplate>
          <DataTemplate>
            <Grid Margin="8">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <!-- Large right margin because this is inline with the caption buttons. -->
              <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,60,0" HorizontalAlignment="Stretch">
                <Image Name="Away" DockPanel.Dock="Right" Margin="6,0,0,0" VerticalAlignment="Center" Width="14" Height="14" Source="pack://application:,,,/Resources/Images/status_away.png" Visibility="Collapsed" />
                <Image Name="Online" DockPanel.Dock="Right" Margin="6,0,0,0" VerticalAlignment="Center" Width="14" Height="14" Source="pack://application:,,,/Resources/Images/status_online.png" Visibility="Collapsed" />

                <Grid HorizontalAlignment="Left">
                  <TextBlock TextAlignment="Left" Text="{Binding Actor.Name}" Foreground="White" FontSize="14" FontWeight="Bold" TextTrimming="CharacterEllipsis">
                    <TextBlock.Effect>
                      <BlurEffect KernelType="Gaussian" Radius="13" />
                    </TextBlock.Effect>
                  </TextBlock>
                  <TextBlock TextAlignment="Left" Text="{Binding Actor.Name}" FontSize="14" FontWeight="Bold" TextTrimming="CharacterEllipsis" Foreground="Black" />
                </Grid>
              </DockPanel>

              <Button Grid.Row="1" Grid.Column="0" Margin="5,3,0,0"
                      VerticalAlignment="Top"
                      Click="_OnNavigateToContentButtonClicked" 
                      ClientManagerView:ViewManager.NavigationContent="{Binding Actor}"
                      Style="{StaticResource AnimatedItemButton}">
                <Grid Width="70" Height="70">
                  <Grid RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                      <TransformGroup>
                        <RotateTransform Angle="-6" />
                      </TransformGroup>
                    </Grid.RenderTransform>
                    <Image Source="pack://application:,,,/Resources/Images/avatar_background.png" />
                    <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Actor.Image}" FacebookImageDimensions="Big">
                      <ClientManagerControls:FacebookImageControl.Template>
                        <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                          <Border Margin="4,4,4.5,6">
                            <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" Stretch="UniformToFill" />
                          </Border>
                        </ControlTemplate>
                      </ClientManagerControls:FacebookImageControl.Template>
                    </ClientManagerControls:FacebookImageControl>
                  </Grid>
                </Grid>
              </Button>
              
              <Button Grid.Row="2" Grid.Column="0" 
                  VerticalAlignment="Center" 
                  HorizontalAlignment="Right" 
                  Click="_OnNavigateToContentButtonClicked" 
                  ClientManagerView:ViewManager.NavigationContent="{Binding Attachment}"
                  Style="{StaticResource AnimatedItemButton}">
                <Image Width="24" Height="24" Stretch="Uniform">
                  <Image.Style>
                    <Style TargetType="{x:Type Image}">
                      <Setter Property="Source" Value="{x:Null}" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Attachment.Type}" Value="Photos">
                          <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Icons/photos_icon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attachment.Type}" Value="Links">
                          <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Icons/links_icon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attachment.Type}" Value="Video">
                          <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Icons/video_icon.png" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Image.Style>
                </Image>
                </Button>

              <Grid x:Name="GlassyStatusBubble" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Margin="10" VerticalAlignment="Top">
                <Path Fill="#FFE3E7F0" Stretch="Fill" Stroke="#FFE3E7F0" HorizontalAlignment="Left" Margin="-5,10,0,0" Width="20" Height="20" Data="M0,0 10,2 10,6Z" StrokeThickness="3" VerticalAlignment="Top" />

                <Border VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,2,2,2" MinHeight="40" Background="#FFE3E7F0" CornerRadius="10" Padding="0">
                  <DockPanel>
                    <TextBlock DockPanel.Dock="Bottom" Margin="10,2" Style="{StaticResource CreatedTextBlockStyle}" Text="{Binding Created, Converter={StaticResource DateTimeConverter}}" />
                    <TextBlock DockPanel.Dock="Top" IsHyphenationEnabled="True" Padding="8,5" TextTrimming="WordEllipsis" TextWrapping="Wrap" FontSize="13px" Foreground="Black" FontFamily="../Fonts/#Gotham">
                      <!-- Should do this if we can detect ellipis.  Alternatively, could overlay a bigger conversation bubble without any trimming as a popup.
                      <TextBlock.ToolTip>
                        <ToolTip MaxWidth="200">
                          <TextBlock Text="{Binding Message}" TextWrapping="Wrap"/>
                        </ToolTip>
                      </TextBlock.ToolTip>
                      -->
                      <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                          <Setter Property="Visibility" Value="Visible" />
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Message}" Value="">
                              <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                      <FacebookClient:HyperlinkTextContent Text="{Binding Message}" RequestNavigate="_OnRequestNavigate"  />
                    </TextBlock>

                    <Grid DataContext="{Binding Attachment}" Margin="14,4" VerticalAlignment="Top" HorizontalAlignment="Center">
                      <Button HorizontalAlignment="Left" 
                              Click="_OnNavigateToContentButtonClicked"
                              ClientManagerView:ViewManager.NavigationContent="{Binding}" 
                              IsEnabled="True">
                        <Button.Style>
                          <Style TargetType="Button" BasedOn="{StaticResource AnimatedItemButton}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding Type}" Value="Video">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Button.Style>
                        <ClientManagerControls:FacebookImageControl FacebookImage="{Binding VideoPreviewImage}" FacebookImageDimensions="Small">
                          <ClientManagerControls:FacebookImageControl.Template>
                            <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                              <Image Margin="2" Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                            </ControlTemplate>
                          </ClientManagerControls:FacebookImageControl.Template>
                        </ClientManagerControls:FacebookImageControl>
                      </Button>

                      <Button ClientManagerView:ViewManager.NavigationContent="{Binding}"
                              Click="_OnNavigateToContentButtonClicked"
                              IsEnabled="True">
                        <Button.Style>
                          <Style TargetType="Button" BasedOn="{StaticResource AnimatedItemButton}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding Type}" Value="Photos">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Button.Style>

                        <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Photos[0].Image}" FacebookImageDimensions="Small">
                          <ClientManagerControls:FacebookImageControl.Template>
                            <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                              <Image Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                            </ControlTemplate>
                          </ClientManagerControls:FacebookImageControl.Template>
                        </ClientManagerControls:FacebookImageControl>
                      </Button>

                      <Grid>
                        <Button ClientManagerView:ViewManager.NavigationContent="{Binding Link}" 
                                Click="_OnNavigateToContentButtonClicked"
                                IsEnabled="True">
                          <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource AnimatedItemButton}">
                              <Setter Property="Visibility" Value="Collapsed" />
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="Links">
                                  <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Button.Style>
                          <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Links[0].Image}" FacebookImageDimensions="Small">
                            <ClientManagerControls:FacebookImageControl.Template>
                              <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                                <Image Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                              </ControlTemplate>
                            </ClientManagerControls:FacebookImageControl.Template>
                          </ClientManagerControls:FacebookImageControl>
                        </Button>
                      </Grid>
                    </Grid>
                  </DockPanel>
                </Border>
              </Grid>
            </Grid>
            <!--<DataTemplate.Triggers>
              <DataTrigger Binding="{Binding Path=OnlinePresence}" Value="Active">
                <Setter TargetName="Online" Property="Visibility" Value="Visible" />
                <Setter TargetName="Away" Property="Visibility" Value="Collapsed" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=OnlinePresence}" Value="Idle">
                <Setter TargetName="Online" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Away" Property="Visibility" Value="Visible" />
              </DataTrigger>
            </DataTemplate.Triggers>-->
          </DataTemplate>
        </FacebookClient:ZapScroller.ItemTemplate>
      </FacebookClient:ZapScroller>
    </DockPanel>

    <StackPanel x:Name="CaptionArea" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="8,0" Orientation="Horizontal" FlowDirection="RightToLeft">
      <Button Style="{StaticResource RestoreButtonStyle}" Click="_OnRestoreClicked">
        <Button.ToolTip>
          <ToolTip Placement="Left">Go back to Fishbowl</ToolTip>
        </Button.ToolTip>
      </Button>
      <Button Style="{StaticResource MinimizeButtonStyle}" Click="_OnMinimizeClicked">
        <Button.ToolTip>
          <ToolTip Placement="Left">Minimize</ToolTip>
        </Button.ToolTip>
      </Button>
    </StackPanel>
  </Grid>
</Window>
