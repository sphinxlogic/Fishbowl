<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:EffectControls"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <ControlTemplate x:Key="AppliedEffectCheckboxTemplate" TargetType="{x:Type CheckBox}">

        <Border 
                BorderBrush="{DynamicResource Background_PhotoViewerOver}"
                BorderThickness="3"
                Background="{DynamicResource Background_PhotoViewerPressed}"
                CornerRadius="3">

            <Grid>
                <!-- ContentPresenter displays content of CheckBox -->
                <ContentPresenter
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding 
                                            HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding
                                            VerticalContentAlignment}" />

                <!-- This Border displays the checked state -->
                <Border Margin="1" Name="checkedState" Background="{DynamicResource Background_PhotoViewerPressed}" CornerRadius="2" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="checkedState" 
                        Property="Background" 
                        Value="{DynamicResource Background_PhotoViewerChecked}" />

            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Background_PhotoViewerOver}" TargetName="checkedState" />
                <Setter Property="BorderThickness" Value="2" TargetName="checkedState"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" 
                        Value="{DynamicResource
                           {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style TargetType="{x:Type local:EffectExpander}" BasedOn="{StaticResource {x:Type Expander}}">

        <Setter Property="BorderThickness" Value="7"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Background_PhotoViewerDefault}"/>
        <Setter Property="Background" Value="{DynamicResource Background_PhotoViewerDefault}"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:StretchBox>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <CheckBox Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" 
                                        IsChecked="{Binding IsEffectApplied, 
                                                    RelativeSource={RelativeSource FindAncestor, 
                                                    AncestorType={x:Type local:EffectExpander}}}"
                                      Width ="30"
                                      Height="30"
                                      Template="{StaticResource AppliedEffectCheckboxTemplate}" />

                            <TextBlock Foreground="{DynamicResource Foreground_ChromeText}" FontSize="20" 
                                       FontFamily="Century Gothic" 
                                       TextWrapping="Wrap"
                                       Padding="0,0,25,0"
                                       VerticalAlignment="Center"
                                        Text="{Binding EffectName,
                                            RelativeSource={RelativeSource FindAncestor, 
                                            AncestorType={x:Type local:EffectExpander}}}"/>
                        </Grid>
                    </local:StretchBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
